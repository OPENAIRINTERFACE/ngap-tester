name: build-all

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [ opened, reopened, synchronize ]

env:
  REGISTRY: ghcr.io
  IMAGE_REPOSITORY : openairinterface
  IMAGE_NAME: 5gc-gnbsim

jobs:

  build-x64:
    if: github.repository_owner == 'openairinterface'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - uses: actions/setup-python@v4
      with:
        python-version: '3.7' 
    - name: Synchronize with merged branches in git sub-modules
      if: github.event_name == 'push'
      run: |
        ./scripts/sync-sub-modules.py --synchronize --force
    - name: Synchronize with temptative branches in git sub-modules
      if: github.event_name == 'pull_request'
      run: |
        ./scripts/sync-for-pull-request.sh

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create the docker image
      run: |
        cd third-party/gnbsim
        export DOCKER_REGISTRY=${{env.REGISTRY}}/
        export DOCKER_REPOSITORY=${{env.IMAGE_REPOSITORY}}/
        if ${{ github.event_name == 'push' }}; then
          export DOCKER_TAG=ngap-tester
        elif ${{ github.event_name == 'pull_request' }}; then
          export DOCKER_TAG=pr-${{github.event.pull_request.number}}
        fi
        make docker-build
        # To see the size of the target image
        docker images

    - name: Push the docker image to ghcr.io
      if: success()
      run: |
        if ${{ github.event_name == 'push' }}; then
          docker push ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:ngap-tester
        elif ${{ github.event_name == 'pull_request' }}; then
          docker push ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:pr-${{github.event.pull_request.number}}
        fi

  sanity-test-x64:
    needs: build-x64
    if: github.repository_owner == 'openairinterface'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Pull images
      run: |
        if ${{ github.event_name == 'push' }}; then
          docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:ngap-tester
          docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:ngap-tester ${{env.IMAGE_NAME}}:ngap-tester
        elif ${{ github.event_name == 'pull_request' }}; then
          docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:pr-${{github.event.pull_request.number}}
          docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/${{env.IMAGE_NAME}}:pr-${{github.event.pull_request.number}} ${{env.IMAGE_NAME}}:pr-${{github.event.pull_request.number}}
        fi
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/mysql:5.7
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-nrf:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-udr:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-udm:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-ausf:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-amf:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-smf:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-spgwu-tiny:develop
        docker pull --quiet ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/trf-gen-cn5g:latest

        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/mysql:5.7 mysql:5.7
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-nrf:develop oai-nrf:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-udr:develop oai-udr:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-udm:develop oai-udm:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-ausf:develop oai-ausf:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-amf:develop oai-amf:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-smf:develop oai-smf:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-spgwu-tiny:develop oai-spgwu-tiny:develop
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/trf-gen-cn5g:latest trf-gen-cn5g:latest
        docker image tag ${{env.REGISTRY}}/${{env.IMAGE_REPOSITORY}}/oai-amf:develop oai-amf:develop
        docker images

    - name: Deploy OAI 5G Core
      run: |
        docker-compose --version
        cd ${{env.GITHUB_WORKSPACE}}/test
        docker-compose -f test/docker-compose-basic-nrf.yaml up -d mysql
        which tcpdump || true
        which tshark || true
        sleep 10
        docker-compose -f test/docker-compose-basic-nrf.yaml up -d
        sleep 10
        docker-compose -f test/docker-compose-basic-nrf.yaml ps -a

    - name: Undeploy OAI 5G Core
      run: |
        cd ${{env.GITHUB_WORKSPACE}}/test
        docker-compose -f test/docker-compose-basic-nrf.yaml down -t 0
        docker-compose -f test/docker-compose-basic-nrf.yaml ps -a


